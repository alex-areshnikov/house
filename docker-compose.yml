version: '3'

services:
  db:
    image: postgres
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: house_production
      POSTGRES_USER:
      POSTGRES_PASSWORD:

  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    volumes:
      - public-folder:/var/www/house/public
    depends_on:
      - db
      - redis
    environment:
      DOCKERIZED: "true"
      REDIS_URL: redis://redis:6379/1
      RAILS_LOG_TO_STDOUT: "true"
      APP_CONTAINER: "true"

  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    volumes:
      - public-folder:/var/www/house/public
    depends_on:
      - app
    ports:
      - 80:80

  redis:
    image: redis
    restart: always

  sidekiq:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    depends_on:
      - db
      - redis
    environment:
      DOCKERIZED: "true"
      REDIS_URL: redis://redis:6379/1
      RAILS_LOG_TO_STDOUT: "true"
      SIDEKIQ_CONTAINER: "true"

  nodejs:
    build:
      context: .
      dockerfile: ./docker/nodejs/Dockerfile
    depends_on:
      - app

#  grafana:
#    image: grafana/grafana
#    volumes:
#      - grafana-storage:/var/lib/grafana
#    ports:
#      - "4000:3000"

volumes:
  postgres-data:
  public-folder:
#  grafana-storage:
